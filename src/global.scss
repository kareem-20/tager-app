/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";
@import "animate.css";

@import "swiper/scss";
@import "swiper/scss/navigation";
@import "swiper/scss/pagination";
// fonts
@import "../shared/mixins.scss";

@font-face {
  font-family: "regular";
  src: url("./assets/fonts/Droidregular.ttf");
}
@font-face {
  font-family: "bold";
  src: url("./assets/fonts/DroidBold.ttf");
}
ion-button {
  --box-shadow: none;
}

.container,
ion-toolbar {
  padding: 0 16px;
  margin: 0 auto;
  max-width: 768px;
}
ion-searchbar {
  input {
    font-size: 14px !important;
    caret-color: var(--main-color) !important;
    padding-inline-start: 40px !important;
  }
  ion-icon {
    margin-right: 5px !important;
  }
  .searchbar-input-container.sc-ion-searchbar-ios {
    height: 35px !important;
  }
}
ion-header::after {
  display: none;
}

body {
  direction: rtl;
}
* {
  font-family: "regular";
}
.animate__zoomIn,
.animate__fadeIn {
  --animate-duration: 0.5s;
}

.modal-one {
  --backdrop-opacity: 0.6;
  &::part(backdrop) {
    background: black;
  }
  &::part(handle) {
    background: white;
    width: 56px;
    transform: translateY(-22px);
    height: 8px;
  }
  &::part(content) {
    overflow: visible;
    border-radius: 20px;
  }
  --border-radius: 14px;
}
// for ios
ion-toolbar {
  --background: white;
  --padding-bottom: 10px;
}
.header-ios ion-toolbar:last-of-type {
  --border-width: 0;
}

.edit .swiper-pagination-bullets {
  bottom: 10px;
  left: 8px;
  width: 100%;
  width: fit-content;
  height: 16px;
  background: #1c292e7d;
  border-radius: 12px;
  padding: 0 4px;
  .swiper-pagination-bullet {
    border: 1px solid white;
    transform: translateY(-2.5px);
  }
  .swiper-pagination-bullet-active {
    background: white;
  }
}

.loading,
.error,
.empty {
  background: #fff;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  @include flex(center, center, 0);
  z-index: 1;
  font-family: "bold";
  font-size: 22px;
  .content {
    text-align: center;
  }
  ion-icon {
    font-size: 35px;
    margin-right: 5px;
  }
  ion-spinner {
    color: red;
  }
}

.loading-class {
  --spinner-color: var(--ion-color-primary);
  ion-spinner {
    transform: translateY(2x);
  }
}

.toast-class {
  text-align: center;
  font-family: "regular";
  --border-radius: 10px;
  --box-shadoe: 0 3px 16px 0 #00000029;
}

.alert-message.sc-ion-alert-ios,
.alert-button.sc-ion-alert-ios {
  font-family: "semi-bold";
}
.alert-title.sc-ion-alert-ios,
.action-sheet-button-inner.sc-ion-action-sheet-ios {
  color: black;
  font-family: "semi-bold";
}
.alert-checkbox-label.sc-ion-alert-ios,
.alert-radio-label.sc-ion-alert-ios {
  font-family: "bold";
}
.alert-button-inner.sc-ion-alert-ios {
  width: 95%;
}
.action-sheet-title.sc-ion-action-sheet-ios {
  font-size: 15px;
  padding: 5px;
  font-family: "semi-bold";
}
.alert-button.sc-ion-alert-ios:nth-child(1) {
  color: var(--ion-color-danger);
}
[aria-checked="true"].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios {
  @include size(10px, 18px);
}
.sc-ion-input-md-h:not(.legacy-input) {
  min-height: unset;
}
